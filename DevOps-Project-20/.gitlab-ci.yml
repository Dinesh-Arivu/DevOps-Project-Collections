stages:
    - npm
    - sonar
    - trivy file scan
    - docker
    - trivy image scan
    - run container
Install dependecy:
    stage: npm
    image:
        name: node:16
    script:
        - npm install
sonarqube-check:
  stage: sonar
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - sonar-scanner
  allow_failure: true
  only:
    - main
Trivy file scan:
  stage: trivy file scan
  image:
    name: aquasec/trivy:latest
    entrypoint: [""]
  script:
    - trivy fs .
Docker build and push:
  stage: docker
  image:
    name: docker:latest
  services:
    - docker:dind
  script:
    - docker build --build-arg REACT_APP_RAPID_API_KEY=b8caac80ebmsh7fcfbc2fc9f3912p17b22djsnb05806bd2745 -t youtubegitlabcicd .
    - docker tag youtubegitlabcicd dinesh1097/youtubegitlabcicd:latest
    - docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
    - docker push dinesh1097/youtubegitlabcicd:latest
Scan image:
  stage: trivy image scan
  image:
    name: aquasec/trivy:latest
    entrypoint: [""]
  script:
    - trivy image dinesh1097/youtubegitlabcicd:latest
deploy:
  stage: run container
  tags:
    - dinesh        #use your own tags
  script:
    - docker run -d --name youtube -p 3000:3000 dinesh1097/youtubegitlabcicd:latest